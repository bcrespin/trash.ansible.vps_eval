---
ip_forward_enable: true
ip_forward_sysctl_value: net.inet.ip.forwarding
resolv_nameservers:
  - 10.0.0.253
resolv_domain: vagrant
package_list: []
pf_file_content: |
  ##macro
  ################
  main="em1"
  vpn_home="tun0"
  vpn_warrior="tun1"
  table <ftp-openbsd-org> { 129.128.5.191 }
  table <internet-dns> { 10.0.0.252, 10.0.0.253 }
  table <openvpn-clients> {172.31.3.254 }
  table <lan_openvpn_home_site> { 172.31.1.20, 172.31.5.100}
  table <lan_openvpn_warrior> { 192.168.255.16/28 } 
  p2p_redirect_tcp_ports_host1= "{ 80 , 443 }"
  p2p_redirect_udp_ports_host1= "{ 80 , 443 }"
  p2p_host1= "172.31.1.20"
  openvpn_server_ports= "{ 1193, 1194 }"
  table <bruteforce> persist

  ##global
  ################
  set skip on lo
  #em0 is for vagrant stuff
  set skip on em0
  match in all scrub (no-df)
 
  #default policy
  block all
 
  ##nat rules
  ################
  match out on $main from any to any nat-to ($main) tagged FROM_VPN
 
  ## rdr rules
  pass in quick on $main proto udp from any to $main:0  port $p2p_redirect_udp_ports_host1 rdr-to $p2p_host1 tag REDIRECT_PORT_TO_VPN
  pass in quick on $main proto tcp from any to $main:0  port $p2p_redirect_tcp_ports_host1 rdr-to $p2p_host1 tag REDIRECT_PORT_TO_VPN 
  ##fw rules
  ################
  block in quick from urpf-failed label uRPF
  block quick from <bruteforce>

  anchor "ftp-proxy/*"

  pass in quick on $vpn_home inet proto tcp from <lan_openvpn_home_site> to ! self port 21 divert-to 127.0.0.1 port 8021
  pass in quick on $vpn_warrior inet proto tcp from <lan_openvpn_warrior> to ! self port 21 divert-to 127.0.0.1 port 8021
  pass quick on $vpn_home from <lan_openvpn_home_site> to any tag FROM_VPN
  pass quick on $vpn_warrior from <lan_openvpn_warrior> to any tag FROM_VPN

  pass in quick on $main proto tcp from any to $main:0 port ssh flags S/SA keep state (max-src-conn 6, max-src-conn-rate 6/60,overload <bruteforce> flush global) 
  pass in quick on $main proto udp from <openvpn-clients> to $main:0 port $openvpn_server_ports 
  # to be or not to be
  pass in quick on $main proto icmp from <openvpn-clients> to  $main:0 icmp-type echoreq 

  #enforce policies for outbound interfaces
  pass out quick on $main tagged FROM_VPN
  pass quick on $vpn_home tagged REDIRECT_PORT_TO_VPN
  
  # firewall is allowed to do all
  pass out quick from self to any

openvpn_instance_home:
  openvpn_dev: tun0
  openvpn_topology: subnet
  openvpn_port: 1193
  openvpn_max_clients: 5
  openvpn_server: 192.168.255.0 255.255.255.240
  openvpn_use_certs: yes
  openvpn_clients_certs: [ 'home2vps' ]
  openvpn_check_username_in_cert: yes
  openvpn_use_auth_file: yes
  openvpn_server_options:
     - "route 172.31.1.20 255.255.255.255"
     - "route 172.31.5.100 255.255.255.255"
  openvpn_clients_config:
   'home2vps':
     content: |
       iroute 172.31.1.20 255.255.255.255
       iroute 172.31.5.100 255.255.255.255

openvpn_instance_warrior:
  openvpn_dev: tun1
  openvpn_topology: subnet
  openvpn_port: 1194
  openvpn_max_clients: 7
  openvpn_server: 192.168.255.16 255.255.255.240
  openvpn_clients_certs: [ 'vps_brice' ]
  openvpn_use_certs: yes
  openvpn_check_username_in_cert: no
  openvpn_use_bsdauth: no
  openvpn_use_auth_file: no

  openvpn_server_options:
    - 'push "redirect-gateway def1 bypass-dhcp"'
#    - 'push "dhcp-option DNS 8.8.8.8"'
#    - 'push "dhcp-option DNS 8.8.4.4"'

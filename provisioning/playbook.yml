---
- hosts: all
  tasks:
     - group_by: key=OS_{{ ansible_os_family }}

- name: routers config (vyos)
  hosts: vyos_routers
  gather_facts: False
  connection: local
  vars:
    cli:
      host: "{{ ansible_ssh_host }}"
      port: "{{ ansible_ssh_port }}"
      username: vagrant
      password: vagrant
      transport: cli
  tasks:
    - include: vyos_routers.yml

- name: FreeBSD common tasks
  hosts: OS_FreeBSD
  gather_facts: False
  tasks:
    - pkgng: name=bash state=present
    - file: src=/usr/local/bin/bash dest=/bin/bash state=link owner=root group=wheel
  roles:
    - ansible_motd
    - ansible-resolv

- name: OpenBSD common tasks
  hosts: OS_OpenBSD
  become: true
  gather_facts: False
  roles:
    - ansible_motd
    - ansible-resolv
  tasks:
    - name: generate pf.conf file
      copy: content="{{ pf_file_content }}" dest=/etc/pf.conf mode=0600 owner=root group=wheel
      when: pf_file_content is defined
      register: result

    - name: reload pf service
      command: sh -c "/sbin/pfctl -n -f /etc/pf.conf && /sbin/pfctl -f /etc/pf.conf"
      when: result.changed 

- name: home clients stuff
  hosts: home_clients
  become: true
  gather_facts: False
  tasks:
    - name: install required package (OpenBSD)  
      openbsd_pkg: name={{ item }} state=present
      with_items: [ 'lynx','wget','openvpn']
      when: ansible_os_family  == 'OpenBSD' 

- name: vps stuff
  hosts: openbsd_vps
  become: true
  gather_facts: False
  roles:
    - { role: boxeman.openvpn , openvpn_instance: "{{ openvpn_instance_home}}" , openvpn_instance_name: home }
    - { role: boxeman.openvpn , openvpn_instance: "{{ openvpn_instance_warrior}}" , openvpn_instance_name: warrior }
